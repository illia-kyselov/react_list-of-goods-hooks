{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","sortType","NONE","value","setValue","preparedList","goods","visibleGoods","sort","a","b","ALPHABETICALLY","localeCompare","LENGTH","length","Error","reverse","getReorderedGoods","className","type","classNames","onClick","map","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,iFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,mCAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAgB,WAC3B,MAA0BC,mBAAS,CACjCC,YAAY,EACZC,SAAUL,EAASM,OAFrB,mBAAOC,EAAP,KAAcC,EAAd,KAqBMC,EAnDR,SACEC,EADF,GAGG,IADCL,EACF,EADEA,SAAUD,EACZ,EADYA,WAENO,EAAY,YAAOD,GAsBzB,OApBAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQT,GACN,KAAKL,EAASe,eACZ,OAAOF,EAAEG,cAAcF,GAEzB,KAAKd,EAASiB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OAEtB,KAAKlB,EAASM,KACZ,OAAO,EAET,QACE,MAAM,IAAIa,MAAM,qCAIlBf,GACFO,EAAaS,UAGRT,EAyBcU,CACnBpB,EACAM,GAGF,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYjB,EAAMF,WAAaL,EAASe,iBAE5CU,QA9BuB,WAC7BjB,EAAS,2BAAKD,GAAN,IAAaF,SAAUL,EAASe,mBAuBpC,iCAWA,wBACEQ,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYjB,EAAMF,WAAaL,EAASiB,SAE5CQ,QArCe,WACrBjB,EAAS,2BAAKD,GAAN,IAAaF,SAAUL,EAASiB,WA8BpC,4BAWA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAajB,EAAMH,aAEvBqB,QA5CQ,WACdjB,EAAS,2BAAKD,GAAN,IAAaH,YAAaG,EAAMH,eAqCpC,sBAWEG,EAAMH,YAAcG,EAAMF,WAAaL,EAASM,OAChD,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAjDI,WACZjB,EAAS,CAAEH,SAAUL,EAASM,KAAMF,YAAY,KA6C1C,sBAUJ,6BACGK,EAAaiB,KAAI,SAAAhB,GAAK,OACrB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCpIjBiB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a04b2c90.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABETICALLY,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nfunction getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABETICALLY:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      case SortType.NONE:\n        return 0;\n\n      default:\n        throw new Error('Error, fixed your sort method');\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [value, setValue] = useState({\n    isReversed: false,\n    sortType: SortType.NONE,\n  });\n\n  const sortedByAlphabetically = () => {\n    setValue({ ...value, sortType: SortType.ALPHABETICALLY });\n  };\n\n  const sortedByLength = () => {\n    setValue({ ...value, sortType: SortType.LENGTH });\n  };\n\n  const reverse = () => {\n    setValue({ ...value, isReversed: !value.isReversed });\n  };\n\n  const reset = () => {\n    setValue({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  const preparedList = getReorderedGoods(\n    goodsFromServer,\n    value,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': value.sortType !== SortType.ALPHABETICALLY },\n          )}\n          onClick={sortedByAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': value.sortType !== SortType.LENGTH },\n          )}\n          onClick={sortedByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !value.isReversed },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(value.isReversed || value.sortType !== SortType.NONE) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {preparedList.map(goods => (\n          <li\n            key={goods}\n            data-cy=\"Good\"\n          >\n            {goods}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}